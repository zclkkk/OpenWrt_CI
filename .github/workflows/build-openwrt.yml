name: Build OpenWrt

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/MikaWrt/openwrt
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: rt-ac42u.config
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free up disk space
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Initialization environment
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y upgrade
        sudo -E apt-get -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Import ccache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: Build defconfig
      run: |
        cd openwrt
        mv $GITHUB_WORKSPACE/$CONFIG_FILE .config
        make defconfig && cat .config

    - name: Build firmware
      run: |
        cd openwrt
        make download -j8
        make -j8
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Organize files
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
